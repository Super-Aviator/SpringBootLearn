server:
  port: 8080 #服务的端口

logging:
  level:
    root: info  #日志的打印级别
    org.springframework: info

spring:
  #数据源配置
  datasource:
    url: jdbc:mysql://localhost:3306/springbootlearn?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    #    url: jdbc:mysql://172.16.160.105:3306/jpa?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    #    name: jpa
    driver-class-name: com.mysql.jdbc.Driver

    #数据库脚本初始化
    data: classpath:SpringBootLearnDML.sql
    #    data-username: '' #执行DML时的用户名
    #    data-password: '' #执行DML时的密码
    schema: classpath:SpringBootLearnDDL.sql
    #    schema-username: '' # 执行DDL时的用户名
    #    schema-password: '' # 执行DML时的密码 # always为始终执行初始化，embedded只初始化内存数据库（默认值）,如h2等，never为不执行初始化
    continue-on-error: true
    separator: ;
    initialization-mode: never

  banner:
    location: banner.txt  #指定banner的文件位置

  jpa:
    show-sql: true #打印jpa的sql语句
    properties:
      hibernate:
        dialect: com.xqk.learn.springboot.data.jpa.config.MyDialect
        enable_lazy_load_no_trans: true #解决懒加载时，缺少session的问题
        format_sql: true #格式化sql语句
        ddl_auto: true #生成数据库定义语句/

  #Multipart文件上传配置
  servlet:
    multipart:
      file-size-threshold: 0MB #当文件达到阀值时进行存储
      max-file-size: 200MB #最大文件大小
      max-request-size: 200MB #最大请求大小
      location: C:\\Users\\Public\\Downloads\\ #文件存放位置

  application:
    name: microservice-springbootlearn

  #flyway开关，相关配置在plugin中指定
  flyway:
    enabled: true
    #需要加classpath惹
    locations: classpath:db/migration

  #quartz配置
  quartz:
    startup-delay: 1s
    job-store-type: memory
    jdbc:
      initialize-schema: never
    properties:
      org:
        quartz:
          #          scheduler:
          #            instanceName: clusteredScheduler
          #            instanceId: AUTO
          #          jobStore:
          #            class: org.quartz.impl.jdbcjobstore.JobStoreTX
          #            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          #            tablePrefix: QRTZ_
          #            isClustered: false
          #            clusterCheckinInterval: 10000
          #            #  org.quartz.jobStore.useProperties配置参数可以设置为“true”（默认为false），为了通知JDBCJobStore
          #            # 所有在JobDataMaps的值都会为String类型，因此可以作为键值对存储，而不是在BLOB列中存储序列化的对象。
          #            # 这从长远看来更安全，例如你可以避免将非String类对象序列化到BLOB中导致的类版本问题。
          #            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 5
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true

management:
  endpoint:
    shutdown:
      enabled: true #开启actuator的shutdown端点

  endpoints:
    web:
      exposure:
        include: [health,info] #设置开启的Actuator节点
#        include: * #设置开启所有的Actuator节点

#      cors:
#        allowed-origins: http://101.37.172.37:8080 #配置允许访问的地址
#        allowed-methods: GET,POST,DELETE,PUT #允许的Http方法

#微服务配置
eureka:
  client:
    enabled: false #关闭eureka